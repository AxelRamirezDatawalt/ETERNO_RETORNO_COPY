name: Setup Dagster Services

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  setup-dagster:
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix:
        runner: [self-hosted-windows]

    env:
      DAGSTER_HOME: C:\dagster_home

    steps:
      - name: Save sensitive files
        shell: cmd
        run: |
          if exist .env (copy .env %RUNNER_TEMP%\.env)
          if exist key.json (copy key.json %RUNNER_TEMP%\key.json)

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          clean: false
          fetch-depth: 2

      - name: Set PowerShell execution policy
        shell: cmd
        run: powershell -Command "Set-ExecutionPolicy RemoteSigned -Scope CurrentUser"

      - name: Install Rust
        shell: powershell
        run: |
          Invoke-WebRequest https://win.rustup.rs/x86_64 -OutFile rustup-init.exe
          .\rustup-init.exe -y --default-toolchain stable --profile minimal
          Remove-Item rustup-init.exe
          $env:Path += ";$env:USERPROFILE\.cargo\bin"
          rustc --version
          cargo --version

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Prepare DAGSTER_HOME directory
        shell: powershell
        run: |
          $dirs = @(
            "${{ env.DAGSTER_HOME }}",
            "${{ env.DAGSTER_HOME }}\logs",
            "${{ env.DAGSTER_HOME }}\compute_logs"
          )
          foreach ($dir in $dirs) { New-Item -Path $dir -ItemType Directory -Force | Out-Null }

      - name: Copy project files to DAGSTER_HOME
        shell: powershell
        run: |
          Copy-Item -Path "$env:GITHUB_WORKSPACE\*" -Destination "${{ env.DAGSTER_HOME }}" -Recurse -Force

      - name: Restore sensitive files
        shell: cmd
        run: |
          if exist %RUNNER_TEMP%\.env (copy %RUNNER_TEMP%\.env .env)
          if exist %RUNNER_TEMP%\key.json (copy %RUNNER_TEMP%\key.json key.json)

      - name: Setup Python virtual environment
        shell: powershell
        run: |
          Set-Location "C:\dagster_home"

          if (-not (Test-Path ".venv")) {
              Write-Host "Creating virtual environment..."
              python -m venv .venv
          } else {
              Write-Host "Virtual environment already exists. Skipping creation."
          }

          .\.venv\Scripts\Activate.ps1

          # Variable para marcar si necesitamos instalar algo
          $install_needed = $false

          # Verificar si setuptools está instalado
          $setuptools_installed = pip list --format=freeze | Select-String "^setuptools="
          if (-not $setuptools_installed) {
              Write-Host "Setuptools not found. Marking for installation."
              $install_needed = $true
          } else {
              Write-Host "Setuptools is already installed."
          }

          # Verificar si wheel está instalado
          $wheel_installed = pip list --format=freeze | Select-String "^wheel="
          if (-not $wheel_installed) {
              Write-Host "Wheel not found. Marking for installation."
              $install_needed = $true
          } else {
              Write-Host "Wheel is already installed."
          }

          # Instalar pip, setuptools, y wheel si es necesario
          if ($install_needed) {
              Write-Host "Installing/updating pip, setuptools, and wheel..."
              python -m pip install --upgrade pip setuptools wheel
          }

          Write-Host "Installing dependencies from requirements.txt..."
          pip install --no-cache-dir -r requirements.txt

          Write-Host "Installing project in editable mode..."
          pip install -e .

      - name: Download and Install NSSM (No cache)
        shell: powershell
        run: |
          $nssmProcess = Get-Process | Where-Object { $_.ProcessName -eq "nssm" }

          if ($nssmProcess) {
              Write-Host "NSSM is running. Skipping installation."
          } else {
              Write-Host "NSSM is not running. Installing..."
              cd $env:DAGSTER_HOME

              Invoke-WebRequest -Uri 'https://nssm.cc/ci/nssm-2.24-101-g897c7ad.zip' -OutFile 'nssm.zip'
              Expand-Archive -Path 'nssm.zip' -DestinationPath . -Force

              if (-not (Test-Path "nssm-2.24-101-g897c7ad\win64\nssm.exe")) {
                  Write-Host "NSSM download failed. Exiting."
                  exit 1
              }

              Copy-Item "nssm-2.24-101-g897c7ad\win64\nssm.exe" . -Force

              Remove-Item 'nssm.zip' -Force
              Remove-Item 'nssm-2.24-101-g897c7ad' -Recurse -Force

              Write-Host "NSSM successfully installed."
          }

      - name: Create service batch files
        shell: cmd
        run: |
          cd C:\dagster_home
          echo @echo off > dagster.bat
          echo set DAGSTER_HOME=C:\dagster_home>> dagster.bat
          echo cd C:\dagster_home >> dagster.bat
          echo call .venv\Scripts\dagster-daemon run >> dagster.bat
          echo pause >> dagster.bat

          echo @echo off > dagster-webserver.bat
          echo set DAGSTER_HOME=C:\dagster_home>> dagster-webserver.bat
          echo cd C:\dagster_home >> dagster-webserver.bat
          echo call .venv\Scripts\dagster-webserver -h 0.0.0.0 -p 3000 >> dagster-webserver.bat
          echo pause >> dagster-webserver.bat

      - name: Install services with NSSM
        shell: cmd
        continue-on-error: true
        run: |
          cd ${{ env.DAGSTER_HOME }}

          nssm.exe stop dagster_service 2>nul && echo "Stopped dagster_service" || echo "Failed to stop dagster_service"
          ping -n 2 127.0.0.1 > nul
          nssm.exe remove dagster_service confirm 2>nul && echo "Removed dagster_service" || echo "Failed to remove dagster_service"
          ping -n 2 127.0.0.1 > nul
          nssm.exe stop dagit_service 2>nul && echo "Stopped dagit_service" || echo "Failed to stop dagit_service"
          ping -n 2 127.0.0.1 > nul
          nssm.exe remove dagit_service confirm 2>nul && echo "Removed dagit_service" || echo "Failed to remove dagit_service"
          ping -n 6 127.0.0.1 > nul  


          REM Install Dagster Daemon Service
          nssm.exe install dagster_service "%DAGSTER_HOME%\dagster.bat"
          nssm.exe set dagster_service DisplayName "Dagster Service"
          nssm.exe set dagster_service Description "Runs Dagster daemon process"
          nssm.exe set dagster_service Start SERVICE_AUTO_START
          nssm.exe set dagster_service AppDirectory "%DAGSTER_HOME%"
          nssm.exe set dagster_service AppStdout "C:\dagster_home\dagster.log"
          nssm.exe set dagster_service AppStderr "C:\dagster_home\dagster.err"

          REM Install Dagster Webserver Service
          nssm.exe install dagit_service "%DAGSTER_HOME%\dagster-webserver.bat"
          nssm.exe set dagit_service DisplayName "Dagster Webserver Service"
          nssm.exe set dagit_service Description "Runs Dagster webserver process"
          nssm.exe set dagit_service Start SERVICE_AUTO_START
          nssm.exe set dagit_service AppDirectory "%DAGSTER_HOME%"
          nssm.exe set dagit_service AppStdout "C:\dagster_home\dagster-webserver.log"
          nssm.exe set dagit_service AppStderr "C:\dagster_home\dagster-webserver.err"

          REM Start services
          nssm.exe start dagster_service
          nssm.exe start dagit_service
